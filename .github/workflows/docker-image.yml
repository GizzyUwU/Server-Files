name: Build Docker Image

on:
  push:
    branches:
      - "main"
    paths:
      - "index.js"
      - "package*.json"
      - "assets/*"
      - "Dockerfile"
      - "Armv6-Dockerfile"
      - "Armv7-Dockerfile"
      - "Arm64-Dockerfile"
      - ".github/workflows/docker-image.yml"
  
  workflow_dispatch:

env:
  REGISTRY_IMAGE: protoshock/protoshock-server

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        platform:
          - linux/amd64
          - linux/arm/v6
          - linux/arm/v7
          - linux/arm64
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: |
            ${{ env.REGISTRY_IMAGE }}
            ghcr.io/${{ github.repository }}

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Log in to the Container registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Determine Dockerfile and Tag
        id: determine-dockerfile
        run: |
          if [[ "${{ matrix.platform }}" == "linux/amd64" ]]; then
            echo "dockerfile=Dockerfile" >> $GITHUB_ENV
            echo "tag=main" >> $GITHUB_ENV
          elif [[ "${{ matrix.platform }}" == "linux/arm/v6" ]]; then
            echo "dockerfile=Armv6-Dockerfile" >> $GITHUB_ENV
            echo "tag=armv6-main" >> $GITHUB_ENV
          elif [[ "${{ matrix.platform }}" == "linux/arm/v7" ]]; then
            echo "dockerfile=Armv7-Dockerfile" >> $GITHUB_ENV
            echo "tag=armv7-main" >> $GITHUB_ENV
          elif [[ "${{ matrix.platform }}" == "linux/arm64" ]]; then
            echo "dockerfile=Arm64-Dockerfile" >> $GITHUB_ENV
            echo "tag=arm64-main" >> $GITHUB_ENV
          fi

      - name: Build and push Docker image
        id: build
        uses: docker/build-push-action@v5
        with:
          context: .
          platforms: ${{ matrix.platform }}
          file: ${{ env.dockerfile }}
          labels: ${{ steps.meta.outputs.labels }}
          tags: |
            ${{ env.REGISTRY_IMAGE }}:${{ env.tag }}
            ghcr.io/server-files:${{ env.tag }}
          push: true
  
      - name: Export digest
        run: |
          mkdir -p /tmp/digests
          digest="${{ steps.build.outputs.digest }}"
          touch "/tmp/digests/${digest#sha256:}"

      - name: Upload digest
        uses: actions/upload-artifact@v3
        with:
          name: digests
          path: /tmp/digests/*
          if-no-files-found: error
          retention-days: 1

  merge:
    runs-on: ubuntu-latest
    needs:
      - build
    steps:
      - name: Download digests
        uses: actions/download-artifact@v3
        with:
          name: digests
          path: /tmp/digests

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: |
            ${{ env.REGISTRY_IMAGE }}
            ghcr.io/server-files

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Log in to the Container registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Create manifest list and push
        run: |
          docker buildx imagetools create \
            --tag ${{ env.REGISTRY_IMAGE }}:main \
            --tag ${{ env.REGISTRY_IMAGE }}:${{ steps.meta.outputs.version }} \
            ${{ env.REGISTRY_IMAGE }}@sha256:$(cat /tmp/digests/*)
            
      - name: Inspect image
        run: |
          docker buildx imagetools inspect ${{ env.REGISTRY_IMAGE }}:${{ steps.meta.outputs.version }}